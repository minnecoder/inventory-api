{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Inventory API",
    "description": "An API for an inventory system"
  },
  "servers": [
    {
      "url": "https://inventory-backend-api.herokuapp.com/api/v1"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "summary": "Returns all customers",
        "description": "Returns all customers",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "A list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new customer",
        "description": "Create a new customer",
        "operationId": "addCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "path",
            "description": "Customer object to add",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New customer is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "summary": "Find customer by ID",
        "description": "Return single customer",
        "operationId": "getSingleCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single customer returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update customer with a given ID",
        "operationId": "updateCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Update customer with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete customer with a given ID",
        "operationId": "deleteCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete customer with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Returns all orders",
        "description": "Retruns all orders",
        "operationId": "getOrders",
        "tags": [
          "Orders"
        ],
        "responses": {
          "200": {
            "description": "A list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new order",
        "description": "Create a new order",
        "operationId": "addOrder",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "body",
            "description": "Order object to add",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New order is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Customer ID was not found"
          },
          "500": {
            "description": "Server Error"
          },
          "501": {
            "description": "Prices are wrong"
          },
          "502": {
            "description": "Item is out of stock"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Find order by ID",
        "description": "Return single order",
        "operationId": "getSingleOrder",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single order returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update order with a given ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Update order with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete order with a given ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete order with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/orderProducts": {
      "get": {
        "summary": "Returns all order products",
        "description": "Returns all order products",
        "operationId": "getOrderProducts",
        "tags": [
          "Order Products"
        ],
        "responses": {
          "200": {
            "description": "A list of order products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order%20Product"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new order product",
        "description": "Create a new order product",
        "operationId": "addOrderProduct",
        "tags": [
          "Order Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "body",
            "description": "Order product object to add",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Order%20Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New order product is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order%20Product"
                }
              }
            }
          },
          "404": {
            "description": "Order Id not found"
          },
          "405": {
            "description": "Product Id not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/orderProducts/{id}": {
      "get": {
        "summary": "Find order product by ID",
        "description": "Return single order product",
        "operationId": "getSingleOrderProduct",
        "tags": [
          "Order Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single order product returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order%20Product"
                }
              }
            }
          },
          "404": {
            "description": "Order product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update order product with a given ID",
        "operationId": "updateOrderProduct",
        "tags": [
          "Order Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Update order product with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order product updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order%20Product"
                }
              }
            }
          },
          "404": {
            "description": "Order product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete order product with a given ID",
        "operationId": "deleteOrderProduct",
        "tags": [
          "Order Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete order product with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order product deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order%20Product"
                }
              }
            }
          },
          "404": {
            "description": "Order product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Returns all products",
        "description": "Returns all products",
        "operationId": "getProducts",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Create a new product",
        "operationId": "addProduct",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "body",
            "description": "Product object to add",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New product is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Find product by ID",
        "description": "Return single product",
        "operationId": "getSingleProduct",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single product returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update product with a given ID",
        "description": "Update product with a given ID",
        "operationId": "updateProduct",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Update product with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete product with a given ID",
        "description": "Delete product with a given ID",
        "operationId": "deleteProduct",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete product with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productReviews": {
      "get": {
        "summary": "Returns all product reviews",
        "description": "Returns all product reviews",
        "tags": [
          "Product Review"
        ],
        "responses": {
          "200": {
            "description": "A list of product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Review"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new product review",
        "description": "Create a new product review",
        "operationId": "addProductReview",
        "tags": [
          "Product Review"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "path",
            "description": "Product review object to add",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New product review is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Review"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productReviews/{id}": {
      "get": {
        "summary": "Find product review by ID",
        "description": "Return single product review",
        "operationId": "getSingleProductReview",
        "tags": [
          "Product Review"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product review",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single product review returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Review"
                }
              }
            }
          },
          "404": {
            "description": "Product review not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update product review with a given ID",
        "description": "Update product review with a given ID",
        "operationId": "updateProductReview",
        "tags": [
          "Product Review"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Update product review with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product review updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Review"
                }
              }
            }
          },
          "404": {
            "description": "Product review not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete product review with a given ID",
        "description": "Delete product review with a given ID",
        "operationId": "deleteProductReview",
        "tags": [
          "Product Review"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete product review with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product review delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Review"
                }
              }
            }
          },
          "404": {
            "description": "Product review not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productSuppliers": {
      "get": {
        "summary": "Returns all order products",
        "description": "Returns all order products",
        "operationId": "getProductSuppliers",
        "tags": [
          "Product Suppliers"
        ],
        "responses": {
          "200": {
            "description": "A list of order products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Supplier"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new order product",
        "description": "Create a new order product",
        "operationId": "addOrderProduct",
        "tags": [
          "Product Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "body",
            "description": "Order product object to add",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Product%20Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New order product is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Supplier not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productSuppliers/{id}": {
      "get": {
        "summary": "Find product supplier by ID",
        "description": "Return single product supplier",
        "operationId": "getSingleProductSupplier",
        "tags": [
          "Product Suppliers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product supplier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single product supplier returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Supplier"
                }
              }
            }
          },
          "404": {
            "description": "ID not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update product supplier with a given ID",
        "description": "Update product supplier with a given ID",
        "operationId": "updateProdctSupplier",
        "tags": [
          "Product Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete product supplier with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product supplier deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Failed. Product supplier not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete order supplier with a given ID",
        "description": "Delete order supplier with a given ID",
        "operationId": "deleteProductSupplier",
        "tags": [
          "Product Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete order supplier with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order supplier deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product%20Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Failed. Order supplier not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "summary": "Returns all suppliers",
        "description": "Returns all suppliers",
        "operationId": "getSuppliers",
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "A list of suppliers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new suppliers",
        "description": "Create a new suppliers",
        "operationId": "addSuppliers",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "body",
            "description": "Suppliers object to add",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New suppliers is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "summary": "Find supplier by ID",
        "description": "Return single supplier",
        "operationId": "getSingleSupplier",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of supplier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Single supplier returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "description": "ID not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update supplier with a given ID",
        "description": "Update supplier with a given ID",
        "operationId": "updateSupplier",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete supplier with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Failed. Supplier not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete supplier with a given ID",
        "description": "Delete supplier with a given ID",
        "operationId": "deleteSupplier",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete supplier with id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Failed. Supplier not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string"
          },
          "customerAddress": {
            "type": "string"
          },
          "customerCity": {
            "type": "string"
          },
          "customerState": {
            "type": "string"
          },
          "customerZip": {
            "type": "string"
          },
          "customerPhone": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "orderStatus": {
            "type": "string"
          },
          "orderTotal": {
            "type": "integer",
            "format": "float"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Order Product": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "quantityOrdered": {
            "type": "integer",
            "format": "int32"
          },
          "productStatus": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string"
          },
          "productDesc": {
            "type": "string"
          },
          "productCost": {
            "type": "integer",
            "format": "float"
          },
          "productPrice": {
            "type": "integer",
            "format": "float"
          },
          "onHand": {
            "type": "integer",
            "format": "int32"
          },
          "reorderLevel": {
            "type": "integer",
            "format": "int32"
          },
          "reorderQty": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Product Review": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "type": "float"
          },
          "reviewText": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Product Supplier": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "productSupplierNotes": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "type": "string"
          },
          "supplierAddress": {
            "type": "string"
          },
          "supplierCity": {
            "type": "string"
          },
          "supplierState": {
            "type": "string"
          },
          "supplierZip": {
            "type": "string"
          },
          "supplierPhone": {
            "type": "string"
          },
          "supplierEmail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      }
    }
  }
}
